c3p0：
http://sarin.iteye.com/blog/580311
http://hi.baidu.com/thinkinginlamp/blog/item/d9e0cb13b04c5428dd540111.html


Windows命令行连接MySQL：
mysql -h -u -p -f
说明：	在命令行连接MySQL
使用：	
备注：	
		-p参数后直接跟密码
示例:	
		登录MySQL	mysql -hlocalhost -uroot -pok
		执行SQL文件	mysql -f -hlocalhost -uroot -pok < "db.sql"


Windows命令行启动和关闭MySQL服务：
C:\Users\Cai>net start mysql
C:\Users\Cai>net stop mysql


Linux命令行重启MySQL：
sudo /etc/init.d/mysql start/stop/restart


查看编码：
mysql> SHOW VARIABLES LIKE 'character\_set\_%';


处理中文乱码：
·找到MySQL的安装路径，如C:\Program Files\MySQL\MySQL Server 5.0\找到my.ini
·将Client Section和Server Section中的default-character-set都由latin1改为utf8
·关闭MySQL服务：net stop mysql
·启动MySQL服务：net start mysql
·生效


修改表引擎：
ALTER TABLE table_name ENGINE = InnoDB;


修改全局引擎：
·找到MySQL的安装路径，如C:\Program Files\MySQL\MySQL Server 5.0\找到my.ini
·查找InnoDB
·修改
·关闭MySQL服务：net stop mysql
·启动MySQL服务：net start mysql
·生效


创建用户：
mysql> CREATE USER 'jeffrey'@'localhost' IDENTIFIED BY 'mypass';
说明：改语句创建了用户名为jeffrey，密码为mypass的用户


修改root密码：
shell> mysqladmin -u root password ok
说明：该语句将root密码修改为ok


创建用户：
CREATE USER uid@localhost IDENTIFIED BY 'pwd';
说明：	在MySQL命令行创建用户
使用：	
备注：	
		uid是用户名
		pwd是明文密码
示例：	
		CREATE USER will@localhost IDENTIFIED BY 'caizheng';

		
赋予权限
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION; 
说明：	在MySQL命令行授予新用户权限
使用：	
备注：	
		*.*是所有数据库所有表
		'root'@'%'是所有IP地址以root登录
示例：
		GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
		GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'ok' WITH GRANT OPTION;


导出数据库：
command-line切到mysql的bin文件夹

c:\mysqldump -u root -p db_name > output.sql	//后面不要加分号，导出数据库中所有内容（包括结构，数据，触发器等） 

c:\mysqldump -d -u root -p db_name > output.sql	//后面不要加分号，导出数据库中所有表的结构。 

c:\mysqldump -u root -p db_name tbl_name > output.sql //后面不要加分号，导出数据库中一个表的结构


执行sql文件：
mysql> source d:/test.sql;
mysql> source d:\\test.sql;


使用bat文件批量初始化MySQL数据库
可以参考coffer_v2和NotificationWeb_v3
创建db.bat文件
db.bat内容
	mysql -f -hlocalhost -uroot -pok < "db.sql"
	-f用来强制执行，遇到错误不停止
	
创建db.sql文件
db.sql内容
	source create.sql;
	source triggers.sql;
	source insert.sql;
	
创建create.sql文件
create.sql内容
	create ......
	注意注释用的--后必须空一格如 -- PK
	
创建triggers.sql文件
triggers.sql内容
	DELIMITER //
	......
	注意最后必须把delimiter换回来，否则执行下一个sql文件会报错
	DELIMITER ;

创建insert.sql文件
insert.sql内容
	insert into ......


导入csv文件
LOAD DATA INFILE "C:/Users/Cai/Desktop/x.csv"
 REPLACE INTO TABLE t_division
 CHARACTER SET utf8
 FIELDS TERMINATED BY "," ENCLOSED BY ""
 LINES TERMINATED BY "\n";

\n是换行.如果下一行已经有了一些内容的话它会在那些内容的后边.因为一搬情况下下一行是没有数据的,很多时候\n也就成了\r\n作用一样 